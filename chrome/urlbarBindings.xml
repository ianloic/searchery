<?xml version="1.0"?>
<bindings id="urlbarBindings" xmlns="http://www.mozilla.org/xbl">
  <binding id="urlbar" extends="chrome://browser/content/urlbarBindings.xml#urlbar">
    <implementation>
      <constructor><![CDATA[
        ]]></constructor>
      <method name="__addSearchResult">
        <parameter name="title"/>
        <parameter name="type"/>
        <parameter name="url"/>
        <parameter name="image"/>
        <parameter name="text"/>
        <body><![CDATA[
          var item = document.createElementNS("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul", "richlistitem");
          item.setAttribute("image", controller.getImageAt(this._currentIndex));
          item.setAttribute("url", url);
          item.setAttribute("title", controller.getCommentAt(this._currentIndex));
          item.setAttribute("type", controller.getStyleAt(this._currentIndex));
          item.setAttribute("text", trimmedSearchString);
      
          item.className = "autocomplete-richlistitem";
          this.richlistbox.appendChild(item);

          ]]></body>
      </method>

    </implementation>
    <handlers>
      <handler event="keypress"><![CDATA[
        window.__log('charCode: '+event.charCode+' ctrlKey: '+event.ctrlKey);
        if (String.fromCharCode(event.charCode) == 'g' && event.ctrlKey) {
          alert(this.richlistbox);
          // find our results popup & richlistbox
          var popup = document.getElementById('PopupAutoCompleteRichResult');
          var richlistbox = document.getAnonymousElementByAttribute(popup, 
              'anonid', 'richlistbox');

          // clear the old results
          while (richlistbox.firstChild) {
            richlistbox.removeChild(richlistbox.firstChild);
          }

          // put in new ones
          var label = document.createElement('label');
          label.setAttribute('value', 'hell oworld');
          richlistbox.appendChild(label);

          // prevent the regular key handling
          event.preventDefault();
          event.stopPropagation();
        }
        /*alert('k');*/
      ]]></handler>
    </handlers>
  </binding>

  <binding id="rich-result" extends="chrome://browser/content/urlbarBindings.xml#urlbar-rich-result-popup">
    <implementation>
      <constructor><![CDATA[
        var opc = this.onPopupClick;
        this.onPopupClick = function (event) {
          alert('opc!');
          opc.apply(this, [event]);
        }

        this.__addedInstructions = false;
        this.__hbox = document.createElement('hbox');
        var label = document.createElement('label');
        label.setAttribute('value', 'press control-G for google');
        this.__hbox.appendChild(label);
        var button = document.createElement('button');
        button.setAttribute('label', 'google');
        this.__hbox.appendChild(button);
        var spacer = document.createElement('spacer');
        spacer.setAttribute('flex', '1');
        this.__hbox.appendChild(spacer);

        this.__googleButtonEventHandler = function (evt) {
          alert('google button clicked');
        }
        button.addEventListener('command', this.__googleButtonEventHandler,
            true);
        button.addEventListener('click', this.__googleButtonEventHandler,
            true);

      ]]></constructor>
    </implementation>
    <handlers>
      <handler event="popupshown"><![CDATA[
        // add instructions if needed
        if (!this.__addedInstructions) {
          var richlistbox = document.getAnonymousElementByAttribute(this, 
              'anonid', 'richlistbox');
          richlistbox.parentNode.appendChild(this.__hbox);
          this.__addedInstructions = true;
        }

        var rlb = document.getAnonymousElementByAttribute(this, 'class', 'autocomplete-richlistbox');
        window.__log(rlb.childNodes.length);
      ]]></handler>
    </handlers>
  </binding>
</bindings>

